openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost
  description: Generated server url
paths:
  /v1/product/{id}:
    get:
      tags:
      - Products Inquiry
      description: Get Product
      operationId: getProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "403":
          description: Forbidden Access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    put:
      tags:
      - Update product
      description: Update product
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "403":
          description: Forbidden Access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      tags:
      - delete product
      description: Delete product
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "403":
          description: Forbidden Access
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "404":
          description: Resource Not Found
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "500":
          description: Internal server error occurred
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /v1/product:
    get:
      tags:
      - All Products Inquiry
      description: Get All Products
      operationId: getAllProducts
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "403":
          description: Forbidden Access
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "404":
          description: Resource Not Found
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "500":
          description: Internal server error occurred
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
      - Add Product
      description: Create new product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequest"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "403":
          description: Forbidden Access
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /api/telegram/send-otp:
    post:
      tags:
      - telegram-otp-controller
      operationId: sendOtpTelegram
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/auth/verify-otp:
    post:
      tags:
      - auth-controller
      operationId: verifyOtpEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OtpVerificationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/send-otp:
    post:
      tags:
      - auth-controller
      operationId: sendOtpEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OtpVerificationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/register:
    post:
      tags:
      - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /v1/product/search:
    get:
      tags:
      - Products Inquiry
      description: Get Product
      operationId: getProductsByNameAndCategory
      parameters:
      - name: itemName
        in: query
        required: false
        schema:
          type: string
      - name: category
        in: query
        required: false
        schema:
          type: string
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "403":
          description: Forbidden Access
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "404":
          description: Resource Not Found
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        "500":
          description: Internal server error occurred
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
  /redis/all:
    get:
      tags:
      - redis-viewer-controller
      operationId: showAllRedisValues
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/telegram/generate-link-code:
    get:
      tags:
      - telegram-otp-controller
      operationId: generateLinkCode
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/telegram/check-link:
    get:
      tags:
      - telegram-otp-controller
      operationId: checkLink
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/health:
    get:
      tags:
      - health-controller
      operationId: health
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    ProductRequest:
      type: object
      properties:
        id:
          type: string
        itemName:
          type: string
        description:
          type: string
        category:
          type: string
        unitPrice:
          type: number
          minimum: 0
        quantity:
          type: integer
          format: int32
          minimum: 1
        unit:
          type: string
      required:
      - category
      - description
      - id
      - itemName
      - quantity
      - unit
      - unitPrice
    Product:
      type: object
      properties:
        id:
          type: string
        itemName:
          type: string
        description:
          type: string
        category:
          type: string
        unitPrice:
          type: number
        quantity:
          type: integer
          format: int32
        unit:
          type: string
    OtpVerificationRequest:
      type: object
      properties:
        tempToken:
          type: string
        otp:
          type: string
        email:
          type: string
        mobile:
          type: string
    AuthRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        mobile:
          type: string
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
